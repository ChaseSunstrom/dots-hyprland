# Generated by Matugen – do not edit
# Hex colors (include leading #)
export MATU_ACCENT="{{ palette.primary }}"
export MATU_ACCENT_CONT="{{ palette.primary_container }}"
export MATU_ACCENT_ON="{{ palette.on_primary }}"
export MATU_BG="{{ palette.surface }}"
export MATU_BG_HI="{{ palette.surface_container_high }}"
export MATU_FG="{{ palette.on_surface }}"
export MATU_FG_VAR="{{ palette.on_surface_variant }}"
export MATU_OUTLINE="{{ palette.outline }}"
export MATU_SECONDARY="{{ palette.secondary }}"
export MATU_SECONDARY_CONT="{{ palette.secondary_container }}"
export MATU_SECONDARY_ON="{{ palette.on_secondary_container }}"

# The full ANSI 16 as hex (useful for apps that want hex)
export MATU_C0="{{ sys.color0 }}"
export MATU_C1="{{ sys.color1 }}"
export MATU_C2="{{ sys.color2 }}"
export MATU_C3="{{ sys.color3 }}"
export MATU_C4="{{ sys.color4 }}"
export MATU_C5="{{ sys.color5 }}"
export MATU_C6="{{ sys.color6 }}"
export MATU_C7="{{ sys.color7 }}"
export MATU_C8="{{ sys.color8 }}"
export MATU_C9="{{ sys.color9 }}"
export MATU_C10="{{ sys.color10 }}"
export MATU_C11="{{ sys.color11 }}"
export MATU_C12="{{ sys.color12 }}"
export MATU_C13="{{ sys.color13 }}"
export MATU_C14="{{ sys.color14 }}"
export MATU_C15="{{ sys.color15 }}"

# fzf colors (truecolor)
export FZF_DEFAULT_OPTS="\
 --color=fg:${MATU_FG},bg:${MATU_BG},hl:${MATU_ACCENT} \
 --color=fg+:${MATU_FG},bg+:${MATU_BG_HI},hl+:${MATU_ACCENT} \
 --color=info:${MATU_SECONDARY},prompt:${MATU_ACCENT},pointer:${MATU_ACCENT} \
 --color=marker:${MATU_ACCENT},spinner:${MATU_ACCENT},header:${MATU_FG_VAR},border:${MATU_OUTLINE}"

# Less (quit-if-one-screen, no-beep). Colors rely on terminal palette.
export LESS='-R --use-color -Dd+r$Du+b --QUIET'

# Optional: zsh completion list-colors (uses ANSI slots; pairs well with kitty.tmpl mapping)
zmodload zsh/complist 2>/dev/null || true
zstyle ':completion:*' menu select
zstyle ':completion:*' list-colors "ma=1;38;2;$(print -P ${MATU_FG#\#} | sed 's/../&;/g;s/.$//')"

# If starship is used, it’ll inherit terminal colors automatically.

